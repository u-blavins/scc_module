//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SharesBrokerASPClient.SharesBroker {
    using System.Xml.Serialization;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SharesBrokerWSPortBinding", Namespace="http://sharesbroker/")]
    public partial class SharesBrokerWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getRealTimeSharesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStockNewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCompanyShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanySymbolsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanyNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAvailableSharesOperationCompleted;
        
        private System.Threading.SendOrPostCallback listSharesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFTSESectorsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCompanySharesOperationCompleted;
        
        private System.Threading.SendOrPostCallback addNewCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback removeCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchBySymbolOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByFTSESectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByRangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByLowestOperationCompleted;
        
        private System.Threading.SendOrPostCallback searchByHighestOperationCompleted;
        
        private System.Threading.SendOrPostCallback filterQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrencyCodesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPriceByCurrencyOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateRatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateSharePriceOperationCompleted;
        
        /// <remarks/>
        public SharesBrokerWS() {
            this.Url = "http://localhost:8080/SharesBrokerWS/SharesBrokerWS";
        }
        
        public SharesBrokerWS(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        public event getRealTimeSharesCompletedEventHandler getRealTimeSharesCompleted;
        
        /// <remarks/>
        public event getShareCompletedEventHandler getShareCompleted;
        
        /// <remarks/>
        public event getStockNewsCompletedEventHandler getStockNewsCompleted;
        
        /// <remarks/>
        public event updateCompanyShareCompletedEventHandler updateCompanyShareCompleted;
        
        /// <remarks/>
        public event getCompanySymbolsCompletedEventHandler getCompanySymbolsCompleted;
        
        /// <remarks/>
        public event getCompanyNameCompletedEventHandler getCompanyNameCompleted;
        
        /// <remarks/>
        public event getAvailableSharesCompletedEventHandler getAvailableSharesCompleted;
        
        /// <remarks/>
        public event listSharesCompletedEventHandler listSharesCompleted;
        
        /// <remarks/>
        public event getFTSESectorsCompletedEventHandler getFTSESectorsCompleted;
        
        /// <remarks/>
        public event getCompanySharesCompletedEventHandler getCompanySharesCompleted;
        
        /// <remarks/>
        public event addNewCompanyCompletedEventHandler addNewCompanyCompleted;
        
        /// <remarks/>
        public event removeCompanyCompletedEventHandler removeCompanyCompleted;
        
        /// <remarks/>
        public event searchBySymbolCompletedEventHandler searchBySymbolCompleted;
        
        /// <remarks/>
        public event searchByNameCompletedEventHandler searchByNameCompleted;
        
        /// <remarks/>
        public event searchByFTSESectorCompletedEventHandler searchByFTSESectorCompleted;
        
        /// <remarks/>
        public event searchByRangeCompletedEventHandler searchByRangeCompleted;
        
        /// <remarks/>
        public event searchByLowestCompletedEventHandler searchByLowestCompleted;
        
        /// <remarks/>
        public event searchByHighestCompletedEventHandler searchByHighestCompleted;
        
        /// <remarks/>
        public event filterQueryCompletedEventHandler filterQueryCompleted;
        
        /// <remarks/>
        public event getCurrencyCodesCompletedEventHandler getCurrencyCodesCompleted;
        
        /// <remarks/>
        public event getPriceByCurrencyCompletedEventHandler getPriceByCurrencyCompleted;
        
        /// <remarks/>
        public event updateRatesCompletedEventHandler updateRatesCompleted;
        
        /// <remarks/>
        public event updateSharePriceCompletedEventHandler updateSharePriceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getRealTimeShares([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string query) {
            object[] results = this.Invoke("getRealTimeShares", new object[] {
                        symbol,
                        query});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getRealTimeSharesAsync(string symbol, string query) {
            this.getRealTimeSharesAsync(symbol, query, null);
        }
        
        /// <remarks/>
        public void getRealTimeSharesAsync(string symbol, string query, object userState) {
            if ((this.getRealTimeSharesOperationCompleted == null)) {
                this.getRealTimeSharesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRealTimeSharesOperationCompleted);
            }
            this.InvokeAsync("getRealTimeShares", new object[] {
                        symbol,
                        query}, this.getRealTimeSharesOperationCompleted, userState);
        }
        
        private void OngetRealTimeSharesOperationCompleted(object arg) {
            if ((this.getRealTimeSharesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRealTimeSharesCompleted(this, new getRealTimeSharesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType getShare([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol) {
            object[] results = this.Invoke("getShare", new object[] {
                        symbol});
            return ((shareType)(results[0]));
        }
        
        /// <remarks/>
        public void getShareAsync(string symbol) {
            this.getShareAsync(symbol, null);
        }
        
        /// <remarks/>
        public void getShareAsync(string symbol, object userState) {
            if ((this.getShareOperationCompleted == null)) {
                this.getShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetShareOperationCompleted);
            }
            this.InvokeAsync("getShare", new object[] {
                        symbol}, this.getShareOperationCompleted, userState);
        }
        
        private void OngetShareOperationCompleted(object arg) {
            if ((this.getShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getShareCompleted(this, new getShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getStockNews([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol) {
            object[] results = this.Invoke("getStockNews", new object[] {
                        symbol});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getStockNewsAsync(string symbol) {
            this.getStockNewsAsync(symbol, null);
        }
        
        /// <remarks/>
        public void getStockNewsAsync(string symbol, object userState) {
            if ((this.getStockNewsOperationCompleted == null)) {
                this.getStockNewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStockNewsOperationCompleted);
            }
            this.InvokeAsync("getStockNews", new object[] {
                        symbol}, this.getStockNewsOperationCompleted, userState);
        }
        
        private void OngetStockNewsOperationCompleted(object arg) {
            if ((this.getStockNewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStockNewsCompleted(this, new getStockNewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("shares")]
        public shareType[] updateCompanyShare([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int shares) {
            object[] results = this.Invoke("updateCompanyShare", new object[] {
                        symbol,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void updateCompanyShareAsync(string symbol, int shares) {
            this.updateCompanyShareAsync(symbol, shares, null);
        }
        
        /// <remarks/>
        public void updateCompanyShareAsync(string symbol, int shares, object userState) {
            if ((this.updateCompanyShareOperationCompleted == null)) {
                this.updateCompanyShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCompanyShareOperationCompleted);
            }
            this.InvokeAsync("updateCompanyShare", new object[] {
                        symbol,
                        shares}, this.updateCompanyShareOperationCompleted, userState);
        }
        
        private void OnupdateCompanyShareOperationCompleted(object arg) {
            if ((this.updateCompanyShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompanyShareCompleted(this, new updateCompanyShareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getCompanySymbols() {
            object[] results = this.Invoke("getCompanySymbols", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCompanySymbolsAsync() {
            this.getCompanySymbolsAsync(null);
        }
        
        /// <remarks/>
        public void getCompanySymbolsAsync(object userState) {
            if ((this.getCompanySymbolsOperationCompleted == null)) {
                this.getCompanySymbolsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanySymbolsOperationCompleted);
            }
            this.InvokeAsync("getCompanySymbols", new object[0], this.getCompanySymbolsOperationCompleted, userState);
        }
        
        private void OngetCompanySymbolsOperationCompleted(object arg) {
            if ((this.getCompanySymbolsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanySymbolsCompleted(this, new getCompanySymbolsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string getCompanyName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol) {
            object[] results = this.Invoke("getCompanyName", new object[] {
                        symbol});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCompanyNameAsync(string symbol) {
            this.getCompanyNameAsync(symbol, null);
        }
        
        /// <remarks/>
        public void getCompanyNameAsync(string symbol, object userState) {
            if ((this.getCompanyNameOperationCompleted == null)) {
                this.getCompanyNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanyNameOperationCompleted);
            }
            this.InvokeAsync("getCompanyName", new object[] {
                        symbol}, this.getCompanyNameOperationCompleted, userState);
        }
        
        private void OngetCompanyNameOperationCompleted(object arg) {
            if ((this.getCompanyNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanyNameCompleted(this, new getCompanyNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int getAvailableShares([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol) {
            object[] results = this.Invoke("getAvailableShares", new object[] {
                        symbol});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void getAvailableSharesAsync(string symbol) {
            this.getAvailableSharesAsync(symbol, null);
        }
        
        /// <remarks/>
        public void getAvailableSharesAsync(string symbol, object userState) {
            if ((this.getAvailableSharesOperationCompleted == null)) {
                this.getAvailableSharesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAvailableSharesOperationCompleted);
            }
            this.InvokeAsync("getAvailableShares", new object[] {
                        symbol}, this.getAvailableSharesOperationCompleted, userState);
        }
        
        private void OngetAvailableSharesOperationCompleted(object arg) {
            if ((this.getAvailableSharesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAvailableSharesCompleted(this, new getAvailableSharesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("shares")]
        public shareType[] listShares() {
            object[] results = this.Invoke("listShares", new object[0]);
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void listSharesAsync() {
            this.listSharesAsync(null);
        }
        
        /// <remarks/>
        public void listSharesAsync(object userState) {
            if ((this.listSharesOperationCompleted == null)) {
                this.listSharesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlistSharesOperationCompleted);
            }
            this.InvokeAsync("listShares", new object[0], this.listSharesOperationCompleted, userState);
        }
        
        private void OnlistSharesOperationCompleted(object arg) {
            if ((this.listSharesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.listSharesCompleted(this, new listSharesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getFTSESectors() {
            object[] results = this.Invoke("getFTSESectors", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getFTSESectorsAsync() {
            this.getFTSESectorsAsync(null);
        }
        
        /// <remarks/>
        public void getFTSESectorsAsync(object userState) {
            if ((this.getFTSESectorsOperationCompleted == null)) {
                this.getFTSESectorsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFTSESectorsOperationCompleted);
            }
            this.InvokeAsync("getFTSESectors", new object[0], this.getFTSESectorsOperationCompleted, userState);
        }
        
        private void OngetFTSESectorsOperationCompleted(object arg) {
            if ((this.getFTSESectorsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFTSESectorsCompleted(this, new getFTSESectorsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] getCompanyShares() {
            object[] results = this.Invoke("getCompanyShares", new object[0]);
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void getCompanySharesAsync() {
            this.getCompanySharesAsync(null);
        }
        
        /// <remarks/>
        public void getCompanySharesAsync(object userState) {
            if ((this.getCompanySharesOperationCompleted == null)) {
                this.getCompanySharesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCompanySharesOperationCompleted);
            }
            this.InvokeAsync("getCompanyShares", new object[0], this.getCompanySharesOperationCompleted, userState);
        }
        
        private void OngetCompanySharesOperationCompleted(object arg) {
            if ((this.getCompanySharesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCompanySharesCompleted(this, new getCompanySharesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("shares")]
        public shareType[] addNewCompany([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string company, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string ftseSector, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string logo, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int availableShares, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string currency, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float shareValue) {
            object[] results = this.Invoke("addNewCompany", new object[] {
                        symbol,
                        company,
                        ftseSector,
                        logo,
                        availableShares,
                        currency,
                        shareValue});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void addNewCompanyAsync(string symbol, string company, string ftseSector, string logo, int availableShares, string currency, float shareValue) {
            this.addNewCompanyAsync(symbol, company, ftseSector, logo, availableShares, currency, shareValue, null);
        }
        
        /// <remarks/>
        public void addNewCompanyAsync(string symbol, string company, string ftseSector, string logo, int availableShares, string currency, float shareValue, object userState) {
            if ((this.addNewCompanyOperationCompleted == null)) {
                this.addNewCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddNewCompanyOperationCompleted);
            }
            this.InvokeAsync("addNewCompany", new object[] {
                        symbol,
                        company,
                        ftseSector,
                        logo,
                        availableShares,
                        currency,
                        shareValue}, this.addNewCompanyOperationCompleted, userState);
        }
        
        private void OnaddNewCompanyOperationCompleted(object arg) {
            if ((this.addNewCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addNewCompanyCompleted(this, new addNewCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("shares")]
        public shareType[] removeCompany([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string companySymbol) {
            object[] results = this.Invoke("removeCompany", new object[] {
                        companySymbol});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void removeCompanyAsync(string companySymbol) {
            this.removeCompanyAsync(companySymbol, null);
        }
        
        /// <remarks/>
        public void removeCompanyAsync(string companySymbol, object userState) {
            if ((this.removeCompanyOperationCompleted == null)) {
                this.removeCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveCompanyOperationCompleted);
            }
            this.InvokeAsync("removeCompany", new object[] {
                        companySymbol}, this.removeCompanyOperationCompleted, userState);
        }
        
        private void OnremoveCompanyOperationCompleted(object arg) {
            if ((this.removeCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.removeCompanyCompleted(this, new removeCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchBySymbol([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchBySymbol", new object[] {
                        symbol,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchBySymbolAsync(string symbol, shareType[] shares) {
            this.searchBySymbolAsync(symbol, shares, null);
        }
        
        /// <remarks/>
        public void searchBySymbolAsync(string symbol, shareType[] shares, object userState) {
            if ((this.searchBySymbolOperationCompleted == null)) {
                this.searchBySymbolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchBySymbolOperationCompleted);
            }
            this.InvokeAsync("searchBySymbol", new object[] {
                        symbol,
                        shares}, this.searchBySymbolOperationCompleted, userState);
        }
        
        private void OnsearchBySymbolOperationCompleted(object arg) {
            if ((this.searchBySymbolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchBySymbolCompleted(this, new searchBySymbolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchByName([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchByName", new object[] {
                        name,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByNameAsync(string name, shareType[] shares) {
            this.searchByNameAsync(name, shares, null);
        }
        
        /// <remarks/>
        public void searchByNameAsync(string name, shareType[] shares, object userState) {
            if ((this.searchByNameOperationCompleted == null)) {
                this.searchByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByNameOperationCompleted);
            }
            this.InvokeAsync("searchByName", new object[] {
                        name,
                        shares}, this.searchByNameOperationCompleted, userState);
        }
        
        private void OnsearchByNameOperationCompleted(object arg) {
            if ((this.searchByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByNameCompleted(this, new searchByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchByFTSESector([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sector, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchByFTSESector", new object[] {
                        sector,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByFTSESectorAsync(string sector, shareType[] shares) {
            this.searchByFTSESectorAsync(sector, shares, null);
        }
        
        /// <remarks/>
        public void searchByFTSESectorAsync(string sector, shareType[] shares, object userState) {
            if ((this.searchByFTSESectorOperationCompleted == null)) {
                this.searchByFTSESectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByFTSESectorOperationCompleted);
            }
            this.InvokeAsync("searchByFTSESector", new object[] {
                        sector,
                        shares}, this.searchByFTSESectorOperationCompleted, userState);
        }
        
        private void OnsearchByFTSESectorOperationCompleted(object arg) {
            if ((this.searchByFTSESectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByFTSESectorCompleted(this, new searchByFTSESectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchByRange([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float min, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float max, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchByRange", new object[] {
                        min,
                        max,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByRangeAsync(float min, float max, shareType[] shares) {
            this.searchByRangeAsync(min, max, shares, null);
        }
        
        /// <remarks/>
        public void searchByRangeAsync(float min, float max, shareType[] shares, object userState) {
            if ((this.searchByRangeOperationCompleted == null)) {
                this.searchByRangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByRangeOperationCompleted);
            }
            this.InvokeAsync("searchByRange", new object[] {
                        min,
                        max,
                        shares}, this.searchByRangeOperationCompleted, userState);
        }
        
        private void OnsearchByRangeOperationCompleted(object arg) {
            if ((this.searchByRangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByRangeCompleted(this, new searchByRangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchByLowest([System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchByLowest", new object[] {
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByLowestAsync(shareType[] shares) {
            this.searchByLowestAsync(shares, null);
        }
        
        /// <remarks/>
        public void searchByLowestAsync(shareType[] shares, object userState) {
            if ((this.searchByLowestOperationCompleted == null)) {
                this.searchByLowestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByLowestOperationCompleted);
            }
            this.InvokeAsync("searchByLowest", new object[] {
                        shares}, this.searchByLowestOperationCompleted, userState);
        }
        
        private void OnsearchByLowestOperationCompleted(object arg) {
            if ((this.searchByLowestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByLowestCompleted(this, new searchByLowestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] searchByHighest([System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("searchByHighest", new object[] {
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void searchByHighestAsync(shareType[] shares) {
            this.searchByHighestAsync(shares, null);
        }
        
        /// <remarks/>
        public void searchByHighestAsync(shareType[] shares, object userState) {
            if ((this.searchByHighestOperationCompleted == null)) {
                this.searchByHighestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsearchByHighestOperationCompleted);
            }
            this.InvokeAsync("searchByHighest", new object[] {
                        shares}, this.searchByHighestOperationCompleted, userState);
        }
        
        private void OnsearchByHighestOperationCompleted(object arg) {
            if ((this.searchByHighestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.searchByHighestCompleted(this, new searchByHighestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] filterQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string name, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sector, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string filterPrice, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float min, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float max, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("filterQuery", new object[] {
                        symbol,
                        name,
                        sector,
                        filterPrice,
                        min,
                        max,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void filterQueryAsync(string symbol, string name, string sector, string filterPrice, float min, float max, shareType[] shares) {
            this.filterQueryAsync(symbol, name, sector, filterPrice, min, max, shares, null);
        }
        
        /// <remarks/>
        public void filterQueryAsync(string symbol, string name, string sector, string filterPrice, float min, float max, shareType[] shares, object userState) {
            if ((this.filterQueryOperationCompleted == null)) {
                this.filterQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfilterQueryOperationCompleted);
            }
            this.InvokeAsync("filterQuery", new object[] {
                        symbol,
                        name,
                        sector,
                        filterPrice,
                        min,
                        max,
                        shares}, this.filterQueryOperationCompleted, userState);
        }
        
        private void OnfilterQueryOperationCompleted(object arg) {
            if ((this.filterQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.filterQueryCompleted(this, new filterQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string[] getCurrencyCodes() {
            object[] results = this.Invoke("getCurrencyCodes", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCurrencyCodesAsync() {
            this.getCurrencyCodesAsync(null);
        }
        
        /// <remarks/>
        public void getCurrencyCodesAsync(object userState) {
            if ((this.getCurrencyCodesOperationCompleted == null)) {
                this.getCurrencyCodesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrencyCodesOperationCompleted);
            }
            this.InvokeAsync("getCurrencyCodes", new object[0], this.getCurrencyCodesOperationCompleted, userState);
        }
        
        private void OngetCurrencyCodesOperationCompleted(object arg) {
            if ((this.getCurrencyCodesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrencyCodesCompleted(this, new getCurrencyCodesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] getPriceByCurrency([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string newCurrencyCode, [System.Xml.Serialization.XmlElementAttribute("shares", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] shareType[] shares) {
            object[] results = this.Invoke("getPriceByCurrency", new object[] {
                        newCurrencyCode,
                        shares});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void getPriceByCurrencyAsync(string newCurrencyCode, shareType[] shares) {
            this.getPriceByCurrencyAsync(newCurrencyCode, shares, null);
        }
        
        /// <remarks/>
        public void getPriceByCurrencyAsync(string newCurrencyCode, shareType[] shares, object userState) {
            if ((this.getPriceByCurrencyOperationCompleted == null)) {
                this.getPriceByCurrencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPriceByCurrencyOperationCompleted);
            }
            this.InvokeAsync("getPriceByCurrency", new object[] {
                        newCurrencyCode,
                        shares}, this.getPriceByCurrencyOperationCompleted, userState);
        }
        
        private void OngetPriceByCurrencyOperationCompleted(object arg) {
            if ((this.getPriceByCurrencyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPriceByCurrencyCompleted(this, new getPriceByCurrencyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool updateRates() {
            object[] results = this.Invoke("updateRates", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateRatesAsync() {
            this.updateRatesAsync(null);
        }
        
        /// <remarks/>
        public void updateRatesAsync(object userState) {
            if ((this.updateRatesOperationCompleted == null)) {
                this.updateRatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateRatesOperationCompleted);
            }
            this.InvokeAsync("updateRates", new object[0], this.updateRatesOperationCompleted, userState);
        }
        
        private void OnupdateRatesOperationCompleted(object arg) {
            if ((this.updateRatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateRatesCompleted(this, new updateRatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://sharesbroker/", ResponseNamespace="http://sharesbroker/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public shareType[] updateSharePrice([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string symbol, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] float price) {
            object[] results = this.Invoke("updateSharePrice", new object[] {
                        symbol,
                        price});
            return ((shareType[])(results[0]));
        }
        
        /// <remarks/>
        public void updateSharePriceAsync(string symbol, float price) {
            this.updateSharePriceAsync(symbol, price, null);
        }
        
        /// <remarks/>
        public void updateSharePriceAsync(string symbol, float price, object userState) {
            if ((this.updateSharePriceOperationCompleted == null)) {
                this.updateSharePriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateSharePriceOperationCompleted);
            }
            this.InvokeAsync("updateSharePrice", new object[] {
                        symbol,
                        price}, this.updateSharePriceOperationCompleted, userState);
        }
        
        private void OnupdateSharePriceOperationCompleted(object arg) {
            if ((this.updateSharePriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateSharePriceCompleted(this, new updateSharePriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://xml.netbeans.org/schema/Shares")]
    public partial class shareType {
        
        /// <remarks/>
        public string CompanyName;
        
        /// <remarks/>
        public string CompanyLogo;
        
        /// <remarks/>
        public int AvailableShares;
        
        /// <remarks/>
        public string CompanyFTSESector;
        
        /// <remarks/>
        public shareTypeShare_price share_price;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CompanySymbol;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://xml.netbeans.org/schema/Shares")]
    public partial class shareTypeShare_price {
        
        /// <remarks/>
        public string Currency;
        
        /// <remarks/>
        public float Value;
        
        /// <remarks/>
        public System.DateTime LastUpdated;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getRealTimeSharesCompletedEventHandler(object sender, getRealTimeSharesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRealTimeSharesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRealTimeSharesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getShareCompletedEventHandler(object sender, getShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getStockNewsCompletedEventHandler(object sender, getStockNewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStockNewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStockNewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void updateCompanyShareCompletedEventHandler(object sender, updateCompanyShareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCompanyShareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCompanyShareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getCompanySymbolsCompletedEventHandler(object sender, getCompanySymbolsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanySymbolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanySymbolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getCompanyNameCompletedEventHandler(object sender, getCompanyNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanyNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanyNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getAvailableSharesCompletedEventHandler(object sender, getAvailableSharesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAvailableSharesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAvailableSharesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void listSharesCompletedEventHandler(object sender, listSharesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class listSharesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal listSharesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getFTSESectorsCompletedEventHandler(object sender, getFTSESectorsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFTSESectorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFTSESectorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getCompanySharesCompletedEventHandler(object sender, getCompanySharesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCompanySharesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCompanySharesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void addNewCompanyCompletedEventHandler(object sender, addNewCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addNewCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addNewCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void removeCompanyCompletedEventHandler(object sender, removeCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class removeCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal removeCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchBySymbolCompletedEventHandler(object sender, searchBySymbolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchBySymbolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchBySymbolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchByNameCompletedEventHandler(object sender, searchByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchByFTSESectorCompletedEventHandler(object sender, searchByFTSESectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByFTSESectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByFTSESectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchByRangeCompletedEventHandler(object sender, searchByRangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByRangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByRangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchByLowestCompletedEventHandler(object sender, searchByLowestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByLowestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByLowestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void searchByHighestCompletedEventHandler(object sender, searchByHighestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class searchByHighestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal searchByHighestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void filterQueryCompletedEventHandler(object sender, filterQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class filterQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal filterQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getCurrencyCodesCompletedEventHandler(object sender, getCurrencyCodesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrencyCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrencyCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void getPriceByCurrencyCompletedEventHandler(object sender, getPriceByCurrencyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPriceByCurrencyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPriceByCurrencyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void updateRatesCompletedEventHandler(object sender, updateRatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateRatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateRatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    public delegate void updateSharePriceCompletedEventHandler(object sender, updateSharePriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "8.4.1.4")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateSharePriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateSharePriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public shareType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((shareType[])(this.results[0]));
            }
        }
    }
}
